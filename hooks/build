#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -eo pipefail

PUSH=""

[ -z "$IMAGE_NAME" ] && echo "IMAGE_NAME is required" && exit 1;

# Nativeagent is a prerequisite of native, but meant to run locally with result json and Dockerfiles commited
# NOPUSH=true IMAGE_NAME=solsson/kafka:nativeagent ./hooks/build
[ -z "$NATIVEAGENT" ] && echo $IMAGE_NAME | grep 'nativeagent$' && NATIVEAGENT=true
# Docker Hub builds with tags ending with "native"
[ -z "$NATIVE" ] && echo $IMAGE_NAME | grep 'native$' && NATIVE=true

function imagename {
  buildname=$1
  case $IMAGE_NAME in
    *:latest) echo -n $IMAGE_NAME | sed "s|:latest|:$buildname|" ;;
    *:*) echo -n $IMAGE_NAME | sed "s|:\(.*\)|:\1-$buildname|" ;;
    *) echo $IMAGE_NAME:$buildname ;;
  esac
}

jre=$(imagename jre)
docker build -t solsson/kafka:jre -t "$jre" ./
PUSH="$PUSH $jre"

nonrootjre=$(imagename jre-nonroot)
docker build -t solsson/kafka:jre-nonroot -t "$nonrootjre" ./jre-nonroot
PUSH="$PUSH $nonrootjre"

docker build -t solsson/kafka -t "$IMAGE_NAME" ./kafka
PUSH="$PUSH $IMAGE_NAME"

nonroot=$(imagename nonroot)
docker build -t solsson/kafka:nonroot -t "$nonroot" ./kafka-nonroot
PUSH="$PUSH $nonroot"

# graalvm=$(imagename graalvm)
# docker build -t solsson/kafka:graalvm -t "$graalvm" ./jdk-adoptopenjdk-graalvm
# PUSH="$PUSH $graalvm"

# nativebase=$(imagename nativebase)
# docker build -t solsson/kafka:nativebase -t "$nativebase" ./native

initutils=$(imagename initutils)
docker build -t solsson/kafka:initutils -t "$initutils" ./initutils
PUSH="$PUSH $initutils"

nonrootinitutils=$(imagename initutils-nonroot)
docker build -t solsson/kafka:initutils-nonroot -t "$nonrootinitutils" ./initutils-nonroot
PUSH="$PUSH $nonrootinitutils"

# cmak=$(imagename cmak)
# docker build -t solsson/kafka:cmak -t "$cmak" ./cmak
# PUSH="$PUSH $cmak"

# Generatoe entrypoints
entrypoints=$(imagename entrypoints)
docker build -t $entrypoints ./kafka-entrypoints

[ "$NATIVEAGENT" = "true" ] && {
  mkdir -p ./native/kafka-entrypoints
}

function entrypoint_gen {
  echo "# $@"
  script=$1; shift
  name=$(basename $script | sed 's|\.sh$||')
  dfile=./kafka-entrypoints/$name.Dockerfile
  image=$(imagename $name)
  echo "FROM solsson/kafka:nonroot" > $dfile
  # TODO ideally we'd have only [executable, -cp, long classpath string] in entrypoint and the rest as CMD
  echo -n 'ENTRYPOINT ["'  >> $dfile
  docker run --rm --entrypoint $script $entrypoints $@ \
    | sed 's| |" \\\
  , "|g' \
    | sed 's|^  , "/etc/kafka|  ]" \
  CMD ["/etc/kafka|g' \
    | sed 's|, "-Xlog:gc|#, "-Xlog:gc|g' \
    | sed 's|, "-Dcom.sun.management.jmxremote|#, "-Dcom.sun.management.jmxremote|g' \
    | sed 's|, "/opt/kafka/libs/extensions/..*:/opt/kafka/bin/../libs/.*|, "/opt/kafka/libs/extensions/*:/opt/kafka/libs/*" \\|g' \
    >> $dfile
  echo '"]'                >> $dfile
  docker build -t $image -f $dfile ./kafka-entrypoints
  PUSH="$PUSH $image"

  [ "$NATIVEAGENT" != "true" ] || {
    cp $dfile native/$dfile
    sed -i "s|FROM .*|FROM $nativebase|" native/$dfile
    sed -i 's|  , "-cp" \\|  , "-agentpath:/opt/graalvm/lib/libnative-image-agent.so=config-merge-dir=/home/nonroot/native-config" \\\
  , "-cp" \\|' native/$dfile
    docker build -t $image -f native/$dfile ./native
  }

}

entrypoint_gen ./bin/kafka-server-start.sh /etc/kafka/server.properties
entrypoint_gen ./bin/zookeeper-server-start.sh /etc/kafka/zookeeper.properties
entrypoint_gen ./bin/kafka-configs.sh
entrypoint_gen ./bin/kafka-topics.sh
entrypoint_gen ./bin/kafka-consumer-groups.sh
entrypoint_gen ./bin/kafka-reassign-partitions.sh
entrypoint_gen ./bin/kafka-leader-election.sh

# Entrypoints done, run native build stuff

[ "$NATIVEAGENT" != "true" ] || {
  ./native/native-usecases.sh
}

[ "$NATIVE" != "true" ] || {
  # Don't push anything else with native builds because those images would also get a "native" tag
  PUSH=""
  for cli in \
      kafka-topics:kafka.admin.TopicCommand \
      kafka-configs:kafka.admin.ConfigCommand \
      kafka-consumer-groups:kafka.admin.ConsumerGroupCommand; do
    command=$(echo $cli | cut -d: -f1)
    mainclass=$(echo $cli | cut -d: -f2)
    nativename=$(imagename $command)
    echo "Buildig admin CLI $command $mainclass ..."
    cat native/admincmd.Dockerfile | sed "s|{{command}}|$command|g" | sed "s|{{mainclass}}|$mainclass|g" | \
      docker build -t solsson/kafka:native-$command -t "$nativename" -f - native/
    PUSH="$PUSH $nativename"
  done
  for nativebuild in \
      zookeeper-server-start \
      cli; do
    nativename=$(imagename $nativebuild)
    docker build -t solsson/kafka:native-$nativebuild -t "$nativename" -f native/$nativebuild.Dockerfile native/
    PUSH="$PUSH $nativename"
  done
}

# Push results

echo "PUSH list contains: $PUSH"
[ -z "$NOPUSH" ] || exit 0
for P in $PUSH; do docker push $P; done
